// Android
apply plugin: 'com.android.library'
// Kotlin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
// JitPack
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.shkschneider'

android {
    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        buildConfigField 'String', 'REVISION', "\"${gitRevision()}\""
    }
}

dependencies {
    version = '1.0.0' // https://developer.android.com/kotlin/ktx
    api "androidx.appcompat:appcompat:${version}"
    api "androidx.recyclerview:recyclerview:${version}"
    api "androidx.palette:palette:${version}"
    api "androidx.preference:preference:${version}"
    api "com.google.android.material:material:${version}"

    version = '1.1.0' // https://github.com/Kotlin/kotlinx.coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${version}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${version}"

    version = '2.8.5' // https://github.com/google/gson
    api "com.google.code.gson:gson:${version}"
}

task cleanCaches(type: Delete) {
    print '> Caches... '
    def caches = new File(getGradle().gradleUserHomeDir.path.toString(), 'caches')
    print "$caches\n"
    delete caches.listFiles()
}

task bump() {
    print '> Bump...'
    def versionCode = versionCode(true)
    print " v${versions.skeleton}r${versionCode}\n"
}

task ci() {
    print '> Travis...'
    travis(android)
    print " build-tools-${versions.android.buildTools} android-${versions.android.sdk.target}\n"
}

def travis(android) {
    def travisFile = file("${rootProject.projectDir}/.travis.yml")
    if (!travisFile.exists()) throw new GradleException(travisFile.path)
    String content = travisFile.getText('UTF-8')
    content = content.replaceFirst('build-tools-[0-9.]+', "build-tools-${versions.android.buildTools}")
    content = content.replaceFirst('android-[0-9]+', "android-${versions.android.sdk.target}")
    new File('.travis.yml').write(content, 'UTF-8')
}

tasks.whenTaskAdded { task ->
    if (task.name == 'preDebugBuild' || task.name == 'preReleaseBuild') {
        task.dependsOn bump
        task.dependsOn ci
    }
}
