// Android
apply plugin: 'com.android.application'
// Kotlin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
kapt.useBuildCache = true

android {
    defaultConfig {
        applicationId 'me.shkschneider.skeleton.demo'
    }
    signingConfigs {
        debug {
            storeFile file('../debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            // keytool -genkey -v -keystore release.jks -keyalg RSA -keysize 2048 -validity 10000 -alias androidkey
            storeFile file('../release.keystore')
            storePassword 'android'
            keyAlias 'androidkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            // applicationIdSuffix '.debug'
            // versionNameSuffix '-DEBUG'
            signingConfig signingConfigs.debug
            buildConfigField 'boolean', 'RELEASE', 'false'
        }
        release {
            signingConfig signingConfigs.release
            buildConfigField 'boolean', 'RELEASE', 'true'
        }
    }
    productFlavors {
        alpha {
            dimension 'default'
            // versionNameSuffix '-ALPHA'
            resValue 'string', 'url', 'http://android.com?alpha'
        }
        beta {
            dimension 'default'
            // versionNameSuffix '-BETA'
            resValue 'string', 'url', 'http://android.com?beta'
        }
        prod {
            dimension 'default'
            resValue 'string', 'url', 'https://android.com'
        }
    }
    bundle {
        /**
         * If the user changes their device configuration at any time (such as adding another choice of language),
         * then the play store will recognize this and attempt to download the new configuration splits
         * for all applications that use split APKs on their device.
         */
        language.enableSplit = true
        density.enableSplit = true
        abi.enableSplit = true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }
}

dependencies {
    // implementation "com.github.shkschneider.android_Skeleton:core:${version}"
    implementation (project(':core')) {
        exclude group: 'androidx.core'
        exclude group: 'androidx.appcompat'
        exclude group: 'androidx.recyclerview'
        exclude group: 'androidx.palette'
        exclude group: 'androidx.lifecycle'
        exclude group: 'com.google.code.gson'
    }
    version = '2.8.5'
    implementation "com.google.code.gson:gson:${version}"

    version = '1.0.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${version}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${version}"

    implementation (project(':arch')) {
        exclude group: 'androidx.appcompat'
        exclude group: 'androidx.lifecycle'
        exclude group: 'android.arch.work'
    }
    version = '1.0.0'
    implementation "androidx.preference:preference:${version}"
    implementation "com.google.android.material:material:${version}"

    implementation (project(':fuel')) {
        exclude group: 'com.github.kittinunf.fuel'
        exclude group: 'com.google.code.gson'
    }
    version = '1.16.0'
    implementation "com.github.kittinunf.fuel:fuel:${version}"

    implementation (project(':room')) { transitive = true }

    implementation project(':kodein')
    version = '5.3.0'
    implementation "org.kodein.di:kodein-di-generic-jvm:${version}"
    implementation "org.kodein.di:kodein-di-framework-android-x:${version}"

    version = '2.0.0'
    implementation "androidx.lifecycle:lifecycle-extensions:${version}"
    implementation "androidx.lifecycle:lifecycle-viewmodel:${version}"
    implementation "androidx.lifecycle:lifecycle-livedata:${version}"
    implementation "androidx.lifecycle:lifecycle-common-java${versions.java}:${version}"

    version = '2.71828'
    implementation "com.squareup.picasso:picasso:${version}"
//    version = '0.2'
//    implementation ("com.github.kittinunf.fuse:fuse:${version}") { transitive = true }
}
