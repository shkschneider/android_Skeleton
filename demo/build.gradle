apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

Properties versionProperties = new Properties()
def versionPropertiesFile = file('version.properties')
if (versionPropertiesFile.exists()) versionProperties.load(new FileInputStream(versionPropertiesFile))
def androidDefaultConfigVersionCode = (versionProperties['versionCode'] ?: "0").toInteger() + 1
versionProperties['versionCode'] = androidDefaultConfigVersionCode.toString()
versionProperties.store(versionPropertiesFile.newWriter(), null)

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId 'me.shkschneider.skeleton.demo'
        minSdkVersion 16 // Jelly Bean 4.1.x
        targetSdkVersion 27
        versionCode androidDefaultConfigVersionCode
        versionName "${versions.skeleton}"
        archivesBaseName = "Skeleton-$versionName"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    signingConfigs {
        debug {
            storeFile file('../debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file('../release.keystore')
            storePassword 'android'
            keyAlias 'androidkey'
            keyPassword 'android'
        }
    }
    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }
    buildTypes {
        debug {
            // applicationIdSuffix '.dev'
            // versionNameSuffix '-DEV'
            debuggable true
            jniDebuggable true
            zipAlignEnabled true
            multiDexEnabled true
            signingConfig signingConfigs.debug
            minifyEnabled false
            shrinkResources false
            buildConfigField "boolean", "MOCK", "true"
            resValue "string", "url", "http://android.com"
        }
        release {
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            multiDexEnabled true
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.pro'
            shrinkResources false
            buildConfigField "boolean", "MOCK", "false"
            resValue "string", "url", "https://android.com"
        }
    }
    defaultPublishConfig 'debug'
    flavorDimensions 'default'
    productFlavors {
        alpha {
            dimension 'default'
            // versionNameSuffix '-ALPHA'
        }
        beta {
            dimension 'default'
            // versionNameSuffix '-BETA'
        }
        prod {
            dimension 'default'
        }
    }
    task myTask(type:Exec) {
        print '> MyTask... ' + '\n'
    }
    tasks.whenTaskAdded { task ->
        if (task.name == 'preDebugBuild' || task.name == 'preReleaseBuild') {
            task.dependsOn myTask
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }
}

dependencies {
    implementation "com.android.support:appcompat-v7:${versions.support}"
    implementation "com.android.support:cardview-v7:${versions.support}"
    implementation "com.android.support:design:${versions.support}"
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.android.support:preference-v7:${versions.support}"
    implementation 'com.android.volley:volley:1.0.0'
    implementation 'com.google.code.gson:gson:2.8.1'


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk${versions.java}:${versions.kotlin}"

    implementation project(':library')
    // implementation 'com.github.shkschneider:android_Skeleton:${versions.skeleton}'
}
repositories {
    mavenCentral()
}
