apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka-android'

Properties versionProperties = new Properties()
def versionPropertiesFile = file('version.properties')
if (versionPropertiesFile.exists()) versionProperties.load(new FileInputStream(versionPropertiesFile))
def androidDefaultConfigVersionCode = (versionProperties['versionCode'] ?: "0").toInteger() + 1
versionProperties['versionCode'] = androidDefaultConfigVersionCode.toString()
versionProperties.store(versionPropertiesFile.newWriter(), null)

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.2'

    defaultConfig {
        minSdkVersion 16 // Jelly Bean 4.1.x
        targetSdkVersion 28
        versionCode androidDefaultConfigVersionCode
        versionName "${versions.skeleton}"
        setProperty('archivesBaseName', "me.shkschneider.skeleton_v" + defaultConfig.versionName + "r" + defaultConfig.versionCode + ".aar")
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
    }
    defaultPublishConfig 'release'
    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }
    // publishNonDefault true
    sourceSets {
        // main.kotlin.srcDirs += 'src/main/kotlin'
        // main.java.srcDirs += 'src/main/kotlin'
    }
    task travis() {
        print '> Updating Travis...' + '\n'
        String content = new File('.travis.yml').getText('UTF-8')
        content = content.replaceFirst('build-tools-[0-9.]+', "build-tools-${android.buildToolsVersion}")
        content = content.replaceFirst('android-[0-9]+', "${android.compileSdkVersion}")
        new File('.travis.yml').write(content, 'UTF-8')
    }
    tasks.whenTaskAdded { task ->
        if (task.name == 'preDebugBuild' || task.name == 'preReleaseBuild') {
            task.dependsOn travis
        }
    }
}

dependencies {
    implementation "com.android.support:design:${versions.support}"
    implementation "com.android.support:palette-v7:${versions.support}"
    implementation "com.android.support:recyclerview-v7:${versions.support}"
    implementation "com.android.support:preference-v14:${versions.support}"
    implementation 'com.android.volley:volley:1.1.1'

    implementation 'android.arch.work:work-runtime:1.0.0-alpha08'

    implementation 'com.google.code.gson:gson:2.8.5'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk${versions.java}:${versions.kotlin}"
}

// ./build/dokka/skeleton/index.html
task doc(type: org.jetbrains.dokka.gradle.DokkaAndroidTask) {
    moduleName = 'skeleton'
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
    jdkVersion = versions.java
    skipEmptyPackages = true
    includeNonPublic = false
    reportUndocumented = false
    noStdlibLink = false
    externalDocumentationLink {
        url = new URL('https://developer.android.com/reference/kotlin')
        packageListUrl = new URL('https://developer.android.com/reference/package-list')
    }
    externalDocumentationLink {
        url = new URL('https://developer.android.com/reference/')
        packageListUrl = new URL('https://developer.android.com/reference/android/support/package-list')
    }
    print "$outputDirectory\n"
}
