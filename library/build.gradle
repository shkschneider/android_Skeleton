// Android
apply plugin: 'com.android.library'
// Kotlin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
// JitPack
apply plugin: 'com.github.dcendents.android-maven'
group='me.shkschneider'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 16 // Jelly Bean 4.1.x
        targetSdkVersion 28
        versionCode versionCode()
        versionName "${versions.skeleton}"
        setProperty('archivesBaseName', "me.shkschneider.skeleton_v" + defaultConfig.versionName + "r" + defaultConfig.versionCode + ".aar")
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
        buildConfigField "String", "REVISION", "\"${gitRevision()}\""
    }
    // <https://issuetracker.google.com/issues/36967265>
    defaultPublishConfig 'release'
    lintOptions {
        disable 'MissingTranslation'
        checkReleaseBuilds true
        abortOnError false
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    resourcePrefix "sk_"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk${versions.java}:${versions.kotlin}"

    implementation "androidx.core:core-ktx:${versions.androidx}"
    implementation "androidx.appcompat:appcompat:${versions.androidx}"
    implementation "androidx.recyclerview:recyclerview:${versions.androidx}"
    implementation "androidx.palette:palette:${versions.androidx}"
    implementation "androidx.preference:preference:${versions.androidx}"
    kapt "android.arch.lifecycle:compiler:${versions.androidx}"

    implementation 'android.arch.work:work-runtime-ktx:1.0.0-alpha11'

    implementation "com.github.kittinunf.fuel:fuel:${versions.fuel}"
    implementation "com.github.kittinunf.fuel:fuel-android:${versions.fuel}"
    implementation "com.github.kittinunf.fuel:fuel-gson:${versions.fuel}"

    implementation 'com.google.code.gson:gson:2.8.5'
}

task bump() << {
    print '> Bump...'
    def versionCode = versionCode(true)
    print " v${versions.skeleton}r${versionCode}\n"
}
task ci() << {
    print '> Travis...'
    travis(android)
    print " build-tools-${android.buildToolsVersion} ${android.compileSdkVersion}\n"
}
tasks.whenTaskAdded { task ->
    if (task.name == 'preDebugBuild' || task.name == 'preReleaseBuild') {
        task.dependsOn bump
        task.dependsOn ci
    }
}
