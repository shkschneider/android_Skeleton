buildscript {
    ext.versions = [
        java: 8,
        kotlin: '1.4.0', // https://github.com/JetBrains/kotlin
        koin: '2.1.6', // https://github.com/InsertKoinIO/koin
        skeleton: '10.1.5',
        gradle: [
            android: '4.0.1', // <https://developer.android.com/studio/releases/gradle-plugin.html>
            jitpack: '2.1'
        ],
        android: [
            java: JavaVersion.VERSION_1_8,
            sdk: [
                target: 29,
                min: 23 // <https://twitter.com/minSdkVersion>
            ],
            buildTools: '29.0.2' // <https://developer.android.com/studio/releases/build-tools>
        ]
    ]
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${versions.gradle.android}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "com.github.dcendents:android-maven-gradle-plugin:${versions.gradle.jitpack}"
        classpath "org.koin:koin-gradle-plugin:${versions.koin}"
    }
}
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        // flatDir { dirs 'libs' }
    }
    dependencies {
        def version
    }
}

def versionCode(increment) {
    Properties versionProperties = new Properties()
    def versionPropertiesFile = file("${rootProject.projectDir}/version.properties")
    if (!versionPropertiesFile.exists()) throw new GradleException(versionPropertiesFile.path)
    versionProperties.load(new FileInputStream(versionPropertiesFile))
    if (increment ?: false) {
        versionProperties['versionCode'] = ((versionProperties['versionCode'] ?: "0").toInteger() + 1).toString()
        versionProperties.store(versionPropertiesFile.newWriter(), null)
    }
    return versionProperties['versionCode']
}
