// <https://developer.android.com/studio/releases/gradle-plugin.html>

buildscript {
    ext.versions = [
        java: 8,
        kotlin: '1.3.72',
        skeleton: '10.0.0'
    ]
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1' // JitPack
    }
}
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        // flatDir { dirs 'libs' }
    }
    dependencies {
        def version
    }
}

apply from: "${rootProject.projectDir}/_android.gradle"
apply from: "${rootProject.projectDir}/_kotlin.gradle"

def versionCode(increment) {
    Properties versionProperties = new Properties()
    def versionPropertiesFile = file("${rootProject.projectDir}/version.properties")
    if (!versionPropertiesFile.exists()) throw new GradleException(versionPropertiesFile.path)
    versionProperties.load(new FileInputStream(versionPropertiesFile))
    if (increment ?: false) {
        versionProperties['versionCode'] = ((versionProperties['versionCode'] ?: "0").toInteger() + 1).toString()
        versionProperties.store(versionPropertiesFile.newWriter(), null)
    }
    return versionProperties['versionCode']
}

// <https://stackoverflow.com/a/35041457>
def gitRevision() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
